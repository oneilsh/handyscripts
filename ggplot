#!/usr/bin/env Rscript
library(ggplot2)

############################
## Default params...
############################

cmd <- ""
use_header <- F

############################
## Read command-line args
############################

args <- commandArgs(trailingOnly = T)

############################
## Parse command-line args
############################

if(length(args) == 2) {
	cmd <- paste("p <- ggplot(dd) + ", args[1])
	use_header <- as.logical(args[2])
} else if(length(args == 1)) {
	cmd <- paste("p <- ggplot(dd) + ", args[1])
} else {
	cat("Usage: cat data.txt | ggplot 'stat_bin(aes(x = V1)) + scale_x_continuous(limits = c(0,100))' F\n")
	cat("If your data has header names:\n")
	cat("Usage: cat data.txt | ggplot 'stat_bin(aes(x = colname)) + scale_x_continuous(limits = c(0,100))' T\n")
	quit()
}

############################
## Read data on stdin, create the plot object
############################

dd <- read.table("stdin", header = use_header, stringsAsFactors = F)
exp <- parse(text = cmd)
eval(exp)


############################
## Save it to disk
############################

datestamp <- format(Sys.time(), "%a-%b-%d-%X-%Y")
tempname <- paste("/tmp/", datestamp, ".pdf", sep = "")
ggsave(tempname, p)


############################
## Display it and remove it.
## qlmanage is an osx-command,
## modify as necessary for your setup ;)
############################

displaycmd <- paste("qlmanage -p ", tempname, sep = "")
rmcmd <- paste("rm ", tempname, sep = "")

system(displaycmd, wait = T)
system(rmcmd, wait = T)
